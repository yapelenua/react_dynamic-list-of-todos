{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","onSelectTodo","className","map","id","title","completed","userId","classNames","type","onClick","TodoFilter","query","handleSetQuery","handleSetFilter","resetQuery","onChange","event","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todo","onSelectedTodo","useState","user","setUser","useEffect","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","setQuery","todoFilter","setTodoFilter","handleSelectingTodo","useCallback","vissibleTodos","filter","lowerQuery","toLowerCase","trim","includes","target","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19ce9667.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId?: number;\n  onSelectTodo: (todo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n\n        <th>Title</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({\n        id,\n        title,\n        completed,\n        userId,\n      }) => (\n        <tr\n          key={id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': id === selectedTodoId,\n          })}\n        >\n          <td className=\"is-vcentered\">{id}</td>\n\n          <td className=\"is-vcentered\">\n            {completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': completed,\n              'has-text-danger': !completed,\n            })}\n            >\n              {title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onSelectTodo({\n                  id,\n                  title,\n                  completed,\n                  userId,\n                });\n              }}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === id\n                  ? <i className=\"far fa-eye-slash\" />\n                  : <i className=\"far fa-eye\" />}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  query: string;\n  handleSetQuery: (event:React.ChangeEvent<HTMLInputElement>) => void;\n  handleSetFilter: (event:React.ChangeEvent<HTMLSelectElement>) => void;\n  resetQuery: () => void;\n}\n\nexport const TodoFilter:React.FC<Props> = ({\n  query,\n  handleSetQuery,\n  handleSetFilter,\n  resetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => handleSetFilter(event)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => handleSetQuery(event)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => resetQuery()}\n            />\n          </span>\n        )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  onSelectedTodo: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo.userId) {\n      getUser(todo.userId)\n        .then(setUser);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onSelectedTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name || 'Unknown user'}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [todoFilter, setTodoFilter] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const handleSelectingTodo = useCallback((todo: Todo) => {\n    setSelectedTodo(todo);\n  }, []);\n\n  let vissibleTodos = todos.filter(todo => {\n    const lowerQuery = query.toLowerCase().trim();\n    const lowerTitle = todo.title.toLowerCase();\n\n    return lowerTitle.includes(lowerQuery);\n  });\n\n  const handleSetQuery = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSetFilter = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setTodoFilter(event.target.value);\n  };\n\n  const resetQuery = () => {\n    setQuery('');\n  };\n\n  switch (todoFilter) {\n    case 'active':\n      vissibleTodos = vissibleTodos.filter(todo => !todo.completed);\n      break;\n    case 'completed':\n      vissibleTodos = vissibleTodos.filter(todo => todo.completed);\n      break;\n    case 'all':\n      setTodoFilter('');\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleSetFilter={handleSetFilter}\n                handleSetQuery={handleSetQuery}\n                resetQuery={resetQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={vissibleTodos}\n                    selectedTodoId={selectedTodo?.id}\n                    onSelectTodo={handleSelectingTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onSelectedTodo={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}